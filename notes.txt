Python Introduction June 2024
=============================

Toby Dussek 

9:30  start
11:00 coffee 
12:30 lunch
3:00  tea 
4:30  end

Course Website: 

Code Repo:

Monday
- Welcome and intros
- where to write code: immediate and module (just a file)
- architecture, structure, and professional code best practice
- print() and input()
- maths operators and data types
- the if statement for conditional logic
- while, break and pass
- indentation
- immutable strings
- print formatting
- lists and tuples
- memory efficiency
- identifiers
- boolean True and False
- type and type conversion
- validate input
- string manipulation
- after lunch review exercise
- dictionaries (non-numeric indexed iterable collections)
- import, pip, libraries and modules
- functions
- very big numeric values
- += etc.
- looping with 'for'
- if __name__ == '__main__'

Tuesday
- quick review of where we got to
- import * (and what are the conventions)
- range, generators
- comprehensions
- passing command-line arguments (which are ALWAYS strings)
- to add libraries to python:
  - python -m ensurepip
  - python â€“m pip install requests (or any other library you need)
- requests (to access web API via HTTP)
- strings with triple quotes
- exception handling (try-except etc.)
- review exercise
- File input and output

Wednesday
- brief review so far
- functions, *args, **kwargs  
- functions live in classes, which live in modules which live in packages
- PEP8 style guide
- custom generator and yield
- global and local scope 
- data modelling structures: 
    use built in structures until they do not suit the purpose (then use classes)
- Objects and Classes (OOP)
- get/set as property decorators @property
- name mangling (__) and slots
- properties, methods, __str__
- intrinsic attributes: __doc__ etc.
- documentation strings (docstring)
- special operators and overriding
- inheritance
- review exercise
- debug tools
- where to go from here:
  https://pynative.com/python-exercises-with-solutions/
  the next courses: advanced python then further advanced python
- end of course feedback

Links
- Python official site https://python.org
- PEP8 style guide https://www.python.org/dev/peps/pep-0008/
